import { NumberValueObject } from '../../../shared/domain/value-objects/number-value-object';
import { StringValueObject } from '../../../shared/domain/value-objects/string-value-object';
import { Entity, Primitives } from '../../../shared/domain/value-objects/entity';

export type MalwareEvolutionProperties = {
  week?: NumberValueObject;
  month?: NumberValueObject;
  year?: NumberValueObject;
  country?: StringValueObject;
  count: NumberValueObject;
};

export class MalwareEvolution extends Entity<MalwareEvolutionProperties> {
  get value(): Primitives<MalwareEvolutionProperties> {
    return {
      week: this.props.week.value,
      month: this.props.month.value,
      year: this.props.year.value,
      country: this.props.country.value,
      count: this.props.count.value
    };
  }

  static create(props: Primitives<MalwareEvolutionProperties>): MalwareEvolution {
    return new MalwareEvolution({
      week: NumberValueObject.createOptional('week', props.week, { minValue: 0, maxValue: 52 }),
      month: NumberValueObject.createOptional('month', props.month, { minValue: 1, maxValue: 12 }),
      year: NumberValueObject.createOptional('year', props.year),
      country: StringValueObject.createOptional('country', props.country),
      count: NumberValueObject.create('count', props.count, { minValue: 0 })
    });
  }
}
