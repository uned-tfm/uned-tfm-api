import { NumberValueObject } from '../../../shared/domain/value-objects/number-value-object';
import { Entity, Primitives } from '../../../shared/domain/value-objects/entity';
import { StringValueObject } from '../../../shared/domain/value-objects/string-value-object';

export type MalwareTypeProperties = {
  country?: StringValueObject;
  malwareType?: StringValueObject;
  result: NumberValueObject;
};

export class MalwareType extends Entity<MalwareTypeProperties> {
  get value(): Primitives<MalwareTypeProperties> {
    return {
      country: this.props.country?.value,
      malwareType: this.props.malwareType?.value,
      result: this.props.result.value
    };
  }

  static create(props: Primitives<MalwareTypeProperties>): MalwareType {
    return new MalwareType({
      country: StringValueObject.createOptional('country', props.country),
      malwareType: StringValueObject.createOptional('malwareType', props.malwareType),
      result: NumberValueObject.create('result', props.result, { minValue: 0 })
    });
  }
}
