import {
  MalwareEvolution,
  MalwareEvolutionProperties
} from '../../../../contexts/malware-evolution/domain/models/malware-evolution.entity';
import { MalwareEvolutionBuilder } from '../__mocks__/malware-evolution.builder';
import { Primitives } from '../../../../contexts/shared/domain/value-objects/entity';
import { FieldValidationError } from '../../../../contexts/shared/domain/errors';

describe('Malware Evolution entity', () => {
  let validMalwareEvolution: MalwareEvolution;

  beforeAll(() => {
    validMalwareEvolution = MalwareEvolutionBuilder().build();
  });

  describe('Input validation', () => {
    it('should throw when is invalid', () => {
      expect(() =>
        MalwareEvolution.create({
          week: 21,
          month: 7,
          country: 'ES'
        } as unknown as Primitives<MalwareEvolutionProperties>)
      ).toThrow(FieldValidationError);
    });

    it('should create malwareEvolution when is valid', () => {
      const malwareEvolution = MalwareEvolution.create(validMalwareEvolution.value);
      expect(malwareEvolution).not.toBeNull();
      expect(malwareEvolution).toMatchObject(validMalwareEvolution);
    });
  });
});
